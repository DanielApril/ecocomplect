$cl-grey-1		= #222222
$cl-grey-2		= #424242
$cl-grey-3		= #808080
$cl-grey-4		= #D6D6D6
$cl-grey-5		= #FAF7F7

$cl-grey-2-07	= rgba($cl-grey-2,.7)
$cl-grey-4-06	= rgba($cl-grey-4,.6)

$cl-white		= #FFFFFF

$shadow		= 0 1px 4px 0 rgba($cl-grey-1,.25)

$ff-promo	= Montserrat, sans-serif
$ff-text	= Roboto, Arial, sans-serif
$ff-icons	= FontAwesome

$text-h1
	line-height 52px
	font-family $ff-promo
	font-weight 300
	font-size 44px

$text-h2
	line-height 44px
	font-family $ff-promo
	font-weight 300
	font-size 32px

$text-h3
	line-height 32px
	font-family $ff-promo
	font-weight 300
	font-size 24px

$text-h4
	line-height 28px
	font-family $ff-promo
	font-weight 300
	font-size 20px

$text-h5
	line-height 24px
	font-family $ff-promo
	font-weight 600
	font-size 16px

$text-lg
	line-height 28px
	font-size 22px

$text
	line-height 24px
	font-size 18px

$text-sm
	line-height 20px
	font-size 14px

$text-xs
	line-height 14px
	font-size 10px

$text-xs
	line-height 14px
	font-size 10px

$text-section-title
	line-height 44px
	font-family $ff-promo
	font-size 36px

$text-section-desc
	@extend $text-lg

$text-navitem
	line-height 16px
	font-family $ff-promo
	font-weight 500
	font-size 14px

$text-project-title
	line-height 32px
	font-family $ff-promo
	font-weight 500
	font-size 24px

$text-benefit-title
	line-height 24px
	font-family $ff-promo
	font-weight 500
	font-size 24px

$text-benefit-desc
	line-height 14px
	font-size 14px


$style-cover
	position absolute
	top 0
	right 0
	bottom 0
	left 0

$style-bg-cover
	background-repeat no-repeat
	background-size cover
	background-position 50% 50%

$style-bg-contain
	background-repeat no-repeat
	background-size contain
	background-position 50% 50%

$style-overflow-ellipsis
	width 100%
	overflow-x hidden
	text-overflow ellipsis
	white-space nowrap

$style-img-resp
	display block
	max-width 100%
	height auto

$style-dummy
	background rgb(63,32,215)
	background linear-gradient(45deg, rgba(63,32,215,1) 0%, rgba(221,67,67,1) 100%)


$mb-mobile-sm			= 340px		// < 340
$mb-mobile-md			= 400px		// > 340 < 400
$mb-mobile-lg			= 600px		// > 400 < 600

$mb-tablet-portrait		= 900px		// > 600 < 900
$mb-tablet-landscape	= 1200px	// < 1200

$mb-desktop-sm			= 1300px	// > 1200 < 1300
$mb-desktop-md			= 1600px	// > 1300 < 1600
$mb-desktop-lg			= $mb-desktop-md + 1 // 1600


$media-queries = {
	mobile				: 'only screen and (max-width '+	$mb-mobile-lg				+')',
	mobile-sm			: 'only screen and (max-width '+	$mb-mobile-sm				+')',
	mobile-md			: 'only screen and (min-width '+	($mb-mobile-sm+1)			+') and (max-width '+	$mb-mobile-md			+')',
	mobile-lg			: 'only screen and (min-width '+	($mb-mobile-md+1)			+') and (max-width '+	$mb-mobile-lg			+')',

	tablet				: 'only screen and (min-width '+	($mb-mobile-lg+1)			+') and (max-width '+	$mb-tablet-landscape	+')',
	tablet-sm			: 'only screen and (min-width '+	($mb-mobile-lg+1)			+') and (max-width '+	$mb-tablet-portrait		+')',
	tablet-lg			: 'only screen and (min-width '+	($mb-tablet-portrait+1)		+') and (max-width '+	$mb-tablet-landscape	+')',

	desktop				: 'only screen and (min-width '+	($mb-tablet-landscape+1)	+')',
	desktop-sm			: 'only screen and (min-width '+	($mb-tablet-landscape+1)	+') and (max-width '+	$mb-desktop-sm			+')',
	desktop-md			: 'only screen and (min-width '+	($mb-desktop-sm+1)			+') and (max-width '+	$mb-desktop-md			+')',
	desktop-lg			: 'only screen and (min-width '+	($mb-desktop-lg)			+')'
}

$media-prefixes = {
	mobile				: 'm',
	mobile-sm			: 'm-s',
	mobile-md			: 'm-m',
	mobile-lg			: 'm-l',

	tablet				: 't',
	tablet-sm			: 't-s',
	tablet-lg			: 't-l',

	desktop				: 'd',
	desktop-sm			: 'd-s',
	desktop-md			: 'd-m',
	desktop-lg			: 'd-l'
}

// MIXIN FOR USE MEDIA QUERIES
// -----------------------------------------------
/*
	Example with one breakpoint:
		+media(mobile)
			[css properties must be here]

	Example with multiple breakpoints (separated with a space):
		+media(mobile tablet)
			[css properties must be here]

	Available mixin values (breakpoints) see in vars-mediabreakpoints.styl
*/
media(breakpoints)
	conditions = ()

	for breakpoint in breakpoints
		// Checking existence of breakpoint
		error('Incorrect breakpoint! (' + breakpoint +')') if ($media-queries[breakpoint] == null)
		push(conditions, $media-queries[breakpoint])

	conditions = join(', ', conditions)

	@media conditions
		{block}