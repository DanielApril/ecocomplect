@require '../_vars'

// FLEX
// -----------------------------------------------
.flex
	display flex

	& > *
		min-width 0

	&:not(._vertical)
		&._center
			&:not(._top):not(._bottom)
				align-items center

			&:not(._left):not(._right)
				justify-content center

		&._top
			align-items flex-start

		&._bottom
			align-items flex-end

		&._right
			justify-content flex-end

		&._left
			justify-content flex-start

		&._stretch
			align-items stretch
			width 100%

		p
		.paragraph
			& + p
				margin-top 0

	&._vertical
		flex-direction column

		& > *
			flex-shrink 0

		&._center
			&:not(._top):not(._bottom)
				justify-content center

			&:not(._left):not(._right)
				align-items center

		&._top
			justify-content flex-start

		&._bottom
			justify-content flex-end

		&._right
			align-items flex-end

		&._left
			align-items flex-start

	.flex__auto
		margin auto

	for $_i in range(4px, 80px, 4)
		&.flex-g{$_i}
			& > *:not(:last-child)
				margin-right $_i

	&._wrap
		flex-wrap wrap

.no-shrink
	flex-shrink 0

.shrink
	flex-shrink 1
	min-width 0

.no-grow
	flex-grow 0

.grow
	flex-grow 1

// Atomic offsets
// -----------------------------------------------
$grid-cell			= 4

.mt-auto
	margin-top auto !important
.mr-auto
	margin-right auto !important
.mb-auto
	margin-bottom auto !important
.ml-auto
	margin-left auto !important

.my-auto
	margin-top auto !important
	margin-bottom auto !important
.mx-auto
	margin-right auto !important
	margin-left auto !important


for $_i in range(0, 15, 1)
	// Margin
	.m{$_i}x
		margin ($_i * $grid-cell)px !important
	.mx{$_i}x
		margin-right ($_i * $grid-cell)px !important
		margin-left ($_i * $grid-cell)px !important
	.my{$_i}x
		margin-top ($_i * $grid-cell)px !important
		margin-bottom ($_i * $grid-cell)px !important
	.mt{$_i}x
		margin-top ($_i * $grid-cell)px !important
	.mr{$_i}x
		margin-right ($_i * $grid-cell)px !important
	.mb{$_i}x
		margin-bottom ($_i * $grid-cell)px !important
	.ml{$_i}x
		margin-left ($_i * $grid-cell)px !important

	// Padding
	.p{$_i}x
		padding ($_i * $grid-cell)px !important
	.px{$_i}x
		padding-right ($_i * $grid-cell)px !important
		padding-left ($_i * $grid-cell)px !important
	.py{$_i}x
		padding-top ($_i * $grid-cell)px !important
		padding-bottom ($_i * $grid-cell)px !important
	.pt{$_i}x
		padding-top ($_i * $grid-cell)px !important
	.pr{$_i}x
		padding-right ($_i * $grid-cell)px !important
	.pb{$_i}x
		padding-bottom ($_i * $grid-cell)px !important
	.pl{$_i}x
		padding-left ($_i * $grid-cell)px !important



// TYPOGRAPHY
// -----------------------------------------------
.ta-l
	text-align left
.ta-c
	text-align center
.ta-r
	text-align right
.ta-j
	text-align justify

.break-word
	overflow-wrap break-word
	word-wrap break-word

.caps
	text-transform uppercase

.nowrap
	@extend $style-overflow-ellipsis

.img-responsive
	@extend $style-img-resp

.video
	position relative
	display block
	padding 0
	width 100%
	overflow hidden

	&::before
		content ''
		display block
		padding-bottom 56.25%

	embed
	iframe
	object
		@extend $style-cover
		width 100%
		height 100%
		border 0